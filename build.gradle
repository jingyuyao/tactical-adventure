buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        // TODO: update to latest after idea 2017.2 is released
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.mobidevelop.robovm:robovm-gradle-plugin:2.3.0'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "tactical-adventure"
        gdxVersion = '1.9.6'
        ashleyVersion = '1.7.3'
        roboVMVersion = '2.3.0'
        guavaVersion = '20.0'
        gsonVersion = '2.8.0'
        guiceVersion = '4.1.0'
        junitVersion = '4.12'
        mockitoVersion = '2.7.22'
        truthVersion = '0.32'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "com.mobidevelop.robovm:robovm-rt:$roboVMVersion"
        compile "com.mobidevelop.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.badlogicgames.ashley:ashley:$ashleyVersion"
        compile "com.google.guava:guava:$guavaVersion"
        compile "com.google.code.gson:gson:$gsonVersion"
        compile "com.google.inject:guice:$guiceVersion:no_aop"
        compile("com.google.inject.extensions:guice-assistedinject:$guiceVersion") {
            // The extension will fetch the normal Guice via transitive dependency.
            // We can't allow that as it includes AOP which doesn't work on Android.
            exclude module: "guice"
        }
        // We mock what we can but we need to run some libGdx for real during testing
        testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        // Need the DLLs from gdx-platform to initialize headless backend
        testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testCompile("com.google.inject.extensions:guice-testlib:$guiceVersion") {
            // see above
            exclude module: "guice"
        }
        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-core:$mockitoVersion"
        testCompile "com.google.truth:truth:$truthVersion"
    }
}

project(":tools") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

tasks.eclipse.doLast {
    delete ".project"
}